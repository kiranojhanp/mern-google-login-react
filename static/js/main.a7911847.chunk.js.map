{"version":3,"sources":["components/SocialLogin.js","App.js","reportWebVitals.js","index.js"],"names":["SocialLogin","useState","JSON","parse","localStorage","getItem","userData","setUserData","handleLogin","googleData","a","axios","post","token","tokenId","res","setItem","stringify","data","console","log","handleLogout","removeItem","window","location","reload","className","style","textAlign","href","clientId","buttonText","render","renderProps","onClick","disabled","onSuccess","onFailure","cookiePolicy","type","name","placeholder","required","value","email","width","alt","height","src","picture","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mPA6GeA,EAzGK,WAAO,IAAD,EACQC,mBAC9BC,KAAKC,MAAMC,aAAaC,QAAQ,UAFV,mBACjBC,EADiB,KACPC,EADO,KAKlBC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACAC,IAAMC,KAAK,0DAA2D,CACtFC,MAAOJ,EAAWK,UAFF,OACZC,EADY,OAKlBX,aAAaY,QAAQ,OAAQd,KAAKe,UAAUF,EAAIG,OAC1CA,EAAOd,aAAaC,QAAQ,QAElCE,EAAYL,KAAKC,MAAMe,IACvBC,QAAQC,IAAIL,EAAIG,MATE,2CAAH,sDAYXG,EAAY,uCAAG,sBAAAX,EAAA,sDACnBN,aAAakB,WAAW,QACxBC,OAAOC,SAASC,QAAO,GAFJ,2CAAH,qDAKlB,OACE,qCACE,+BACE,sBAAKC,UAAU,MAAf,UACE,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,iDAGA,qBAAKF,UAAU,KAAf,SACE,sBAAMA,UAAU,eAAhB,kBAGF,sBAAKA,UAAU,MAAf,UACE,yBAAQG,KAAK,IAAIH,UAAU,SAA3B,UACE,mBAAGA,UAAU,yBADf,0BAGA,yBAAQG,KAAK,IAAIH,UAAU,cAA3B,UACE,mBAAGA,UAAU,wBADf,yBAIA,cAAC,cAAD,CACEI,SAAS,2EACTC,WAAW,qBACXC,OAAQ,SAACC,GAAD,OACN,yBACEP,UAAU,aACVQ,QAASD,EAAYC,QACrBC,SAAUF,EAAYE,SAHxB,UAKE,mBAAGT,UAAU,uBALf,yBAQFU,UAAW5B,EACX6B,UAAW7B,EACX8B,aAAc,0BAIlB,sBAAKZ,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SACE,uDAGF,uBACEa,KAAK,OACLC,KAAK,WACLC,YAAY,WACZC,UAAQ,IAEV,uBACEH,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,UAAQ,IAEV,uBAAOH,KAAK,SAASI,MAAM,kBAIjC,uBACA,qBAAKjB,UAAU,MAAf,SACE,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,UACW,OAARtB,QAAQ,IAARA,OAAA,EAAAA,EAAUO,OACT,gCACE,8CAAeP,EAASkC,KAAxB,sBAA0ClC,EAASsC,MAAnD,UACA,qBACEC,MAAM,OACNC,IAAI,UACJC,OAAO,OACPC,IAAK1C,EAAS2C,UAEhB,yBAAQpB,KAAK,IAAIH,UAAU,cAAcQ,QAASb,EAAlD,UACE,mBAAGK,UAAU,yBADf,gBAKF,gBCxFGwB,MAXf,WAEE,OACE,mCACE,qBAAKxB,UAAU,YAAf,SACE,cAAC,EAAD,SCKOyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS5B,OACP,cAAC,IAAM6B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a7911847.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { GoogleLogin } from \"react-google-login\";\n\nconst SocialLogin = () => {\n  const [userData, setUserData] = useState(\n    JSON.parse(localStorage.getItem(\"data\"))\n  );\n\n  const handleLogin = async (googleData) => {\n    const res = await axios.post(\"https://still-eyrie-92675.herokuapp.com/api/auth/google\", {\n      token: googleData.tokenId,\n    });\n\n    localStorage.setItem(\"data\", JSON.stringify(res.data));\n    const data = localStorage.getItem(\"data\");\n\n    setUserData(JSON.parse(data));\n    console.log(res.data);\n  };\n\n  const handleLogout = async () => {\n    localStorage.removeItem(\"data\");\n    window.location.reload(false);\n  };\n\n  return (\n    <>\n      <form>\n        <div className=\"row\">\n          <h2 style={{ textAlign: \"center\" }}>\n            Login with Social Media or Manually\n          </h2>\n          <div className=\"vl\">\n            <span className=\"vl-innertext\">or</span>\n          </div>\n\n          <div className=\"col\">\n            <button href=\"#\" className=\"fb btn\">\n              <i className=\"fa fa-facebook fa-fw\"></i> Login with Facebook\n            </button>\n            <button href=\"#\" className=\"twitter btn\">\n              <i className=\"fa fa-twitter fa-fw\"></i> Login with Twitter\n            </button>\n\n            <GoogleLogin\n              clientId=\"262658563971-25m2is7t0qfl54cr5bna4j207qa1ii0c.apps.googleusercontent.com\"\n              buttonText=\"Log in with Google\"\n              render={(renderProps) => (\n                <button\n                  className=\"google btn\"\n                  onClick={renderProps.onClick}\n                  disabled={renderProps.disabled}\n                >\n                  <i className=\"fa fa-google fa-fw\"></i> Login with Google\n                </button>\n              )}\n              onSuccess={handleLogin}\n              onFailure={handleLogin}\n              cookiePolicy={\"single_host_origin\"}\n            />\n          </div>\n\n          <div className=\"col\">\n            <div className=\"hide-md-lg\">\n              <p>Or sign in manually:</p>\n            </div>\n\n            <input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              required\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n            <input type=\"submit\" value=\"Login\" />\n          </div>\n        </div>\n      </form>\n      <hr />\n      <div className=\"row\">\n        <h2 style={{ textAlign: \"center\" }}>\n          {userData?.token ? (\n            <div>\n              <pre>{`Name: ${userData.name} \\n Email: ${userData.email} \\n `}</pre>\n              <img\n                width=\"50px\"\n                alt=\"profile\"\n                height=\"50px\"\n                src={userData.picture}\n              />\n              <button href=\"#\" className=\"twitter btn\" onClick={handleLogout}>\n                <i className=\"fa fa-sign-out fa-fw\"></i> Logout\n              </button>\n            </div>\n          ) : (\n            \"Login\"\n          )}\n        </h2>\n      </div>\n    </>\n  );\n};\n\nexport default SocialLogin;\n","import SocialLogin from \"./components/SocialLogin\";\n\nfunction App() {\n\n  return (\n    <>\n      <div className=\"container\">\n        <SocialLogin />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}